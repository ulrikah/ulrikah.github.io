{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-spa-router/Router.svelte","../../node_modules/regexparam/dist/regexparam.mjs","../../src/Row.svelte","../../src/Portal.svelte","../../src/Peers.svelte","../../src/Star.svelte","../../src/Blank.svelte","../../src/Link.svelte","../../src/Beskrivelse.svelte","../../src/Wave.svelte","../../src/Swonk.svelte","../../src/Prosjekter.svelte","../../src/Hode.svelte","../../src/Home.svelte","../../src/Posts/Peers.svelte","../../src/Posts.svelte","../../src/NotFound.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","<script context=\"module\">\nimport {readable, derived} from 'svelte/store'\nimport {tick} from 'svelte'\nimport {wrap as _wrap} from './wrap'\n\n/**\n * Wraps a component to add route pre-conditions.\n * @deprecated Use `wrap` from `svelte-spa-router/wrap` instead. This function will be removed in a later version.\n * \n * @param {SvelteComponent} component - Svelte component for the route\n * @param {object} [userData] - Optional object that will be passed to each `conditionsFailed` event\n * @param {...function(RouteDetail): boolean} conditions - Route pre-conditions to add, which will be executed in order\n * @returns {WrappedComponent} Wrapped component\n */\nexport function wrap(component, userData, ...conditions) {\n    // Use the new wrap method and show a deprecation warning\n    // eslint-disable-next-line no-console\n    console.warn('Method `wrap` from `svelte-spa-router` is deprecated and will be removed in a future version. Please use `svelte-spa-router/wrap` instead. See http://bit.ly/svelte-spa-router-upgrading')\n    return _wrap({\n        component,\n        userData,\n        conditions\n    })\n}\n\n/**\n * @typedef {Object} Location\n * @property {string} location - Location (page/view), for example `/book`\n * @property {string} [querystring] - Querystring from the hash, as a string not parsed\n */\n/**\n * Returns the current location from the hash.\n *\n * @returns {Location} Location object\n * @private\n */\nfunction getLocation() {\n    const hashPosition = window.location.href.indexOf('#/')\n    let location = (hashPosition > -1) ? window.location.href.substr(hashPosition + 1) : '/'\n\n    // Check if there's a querystring\n    const qsPosition = location.indexOf('?')\n    let querystring = ''\n    if (qsPosition > -1) {\n        querystring = location.substr(qsPosition + 1)\n        location = location.substr(0, qsPosition)\n    }\n\n    return {location, querystring}\n}\n\n/**\n * Readable store that returns the current full location (incl. querystring)\n */\nexport const loc = readable(\n    null,\n    // eslint-disable-next-line prefer-arrow-callback\n    function start(set) {\n        set(getLocation())\n\n        const update = () => {\n            set(getLocation())\n        }\n        window.addEventListener('hashchange', update, false)\n\n        return function stop() {\n            window.removeEventListener('hashchange', update, false)\n        }\n    }\n)\n\n/**\n * Readable store that returns the current location\n */\nexport const location = derived(\n    loc,\n    ($loc) => $loc.location\n)\n\n/**\n * Readable store that returns the current querystring\n */\nexport const querystring = derived(\n    loc,\n    ($loc) => $loc.querystring\n)\n\n/**\n * Navigates to a new page programmatically.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function push(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    // Note: this will include scroll state in history even when restoreScrollState is false\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)      \n    window.location.hash = (location.charAt(0) == '#' ? '' : '#') + location\n}\n\n/**\n * Navigates back in history (equivalent to pressing the browser's back button).\n * \n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function pop() {\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    window.history.back()\n}\n\n/**\n * Replaces the current page but without modifying the history stack.\n *\n * @param {string} location - Path to navigate to (must start with `/` or '#/')\n * @return {Promise<void>} Promise that resolves after the page navigation has completed\n */\nexport async function replace(location) {\n    if (!location || location.length < 1 || (location.charAt(0) != '/' && location.indexOf('#/') !== 0)) {\n        throw Error('Invalid parameter location')\n    }\n\n    // Execute this code when the current call stack is complete\n    await tick()\n\n    const dest = (location.charAt(0) == '#' ? '' : '#') + location\n    try {\n        window.history.replaceState(undefined, undefined, dest)\n    }\n    catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Caught exception while replacing the current page. If you\\'re running this in the Svelte REPL, please note that the `replace` method might not work in this environment.')\n    }\n\n    // The method above doesn't trigger the hashchange event, so let's do that manually\n    window.dispatchEvent(new Event('hashchange'))\n}\n\n/**\n * Svelte Action that enables a link element (`<a>`) to use our history management.\n *\n * For example:\n *\n * ````html\n * <a href=\"/books\" use:link>View books</a>\n * ````\n *\n * @param {HTMLElement} node - The target node (automatically set by Svelte). Must be an anchor tag (`<a>`) with a href attribute starting in `/`\n * @param {string} hrefVar - A string to use in place of the link's href attribute. Using this allows for updating link's targets reactively.\n */\nexport function link(node, hrefVar) {\n    // Only apply to <a> tags\n    if (!node || !node.tagName || node.tagName.toLowerCase() != 'a') {\n        throw Error('Action \"link\" can only be used with <a> tags')\n    }\n\n    updateLink(node, hrefVar || node.getAttribute('href'))\n\n    return {\n        update(updated) {\n            updateLink(node, updated)\n        }\n    }\n}\n\n// Internal function used by the link function\nfunction updateLink(node, href) {\n    // Destination must start with '/'\n    if (!href || href.length < 1 || href.charAt(0) != '/') {\n        throw Error('Invalid value for \"href\" attribute: ' + href)\n    }\n\n    // Add # to the href attribute\n    node.setAttribute('href', '#' + href)\n    node.addEventListener('click', scrollstateHistoryHandler)\n}\n\n/**\n * The handler attached to an anchor tag responsible for updating the\n * current history state with the current scroll state\n *\n * @param {HTMLElementEventMap} event - an onclick event attached to an anchor tag\n */\nfunction scrollstateHistoryHandler(event) {\n    // Prevent default anchor onclick behaviour\n    event.preventDefault()\n    const href = event.currentTarget.getAttribute('href')\n    // Setting the url (3rd arg) to href will break clicking for reasons, so don't try to do that\n    history.replaceState({scrollX: window.scrollX, scrollY: window.scrollY}, undefined, undefined)\n    // This will force an update as desired, but this time our scroll state will be attached\n    window.location.hash = href\n}\n</script>\n\n{#if componentParams}\n    <svelte:component\n    this=\"{component}\"\n    params=\"{componentParams}\"\n    on:routeEvent\n    {...props}\n    />\n{:else}\n    <svelte:component\n    this=\"{component}\"\n    on:routeEvent\n    {...props}\n    />\n{/if}\n\n<script>\nimport {createEventDispatcher, afterUpdate} from 'svelte'\nimport regexparam from 'regexparam'\n\n/**\n * Dictionary of all routes, in the format `'/path': component`.\n *\n * For example:\n * ````js\n * import HomeRoute from './routes/HomeRoute.svelte'\n * import BooksRoute from './routes/BooksRoute.svelte'\n * import NotFoundRoute from './routes/NotFoundRoute.svelte'\n * routes = {\n *     '/': HomeRoute,\n *     '/books': BooksRoute,\n *     '*': NotFoundRoute\n * }\n * ````\n */\nexport let routes = {}\n\n/**\n * Optional prefix for the routes in this router. This is useful for example in the case of nested routers.\n */\nexport let prefix = ''\n\n/**\n * If set to true, the router will restore scroll positions on back navigation\n * and scroll to top on forward navigation.\n */\nexport let restoreScrollState = false\n\n/**\n * Container for a route: path, component\n */\nclass RouteItem {\n    /**\n     * Initializes the object and creates a regular expression from the path, using regexparam.\n     *\n     * @param {string} path - Path to the route (must start with '/' or '*')\n     * @param {SvelteComponent|WrappedComponent} component - Svelte component for the route, optionally wrapped\n     */\n    constructor(path, component) {\n        if (!component || (typeof component != 'function' && (typeof component != 'object' || component._sveltesparouter !== true))) {\n            throw Error('Invalid component object')\n        }\n\n        // Path must be a regular or expression, or a string starting with '/' or '*'\n        if (!path || \n            (typeof path == 'string' && (path.length < 1 || (path.charAt(0) != '/' && path.charAt(0) != '*'))) ||\n            (typeof path == 'object' && !(path instanceof RegExp))\n        ) {\n            throw Error('Invalid value for \"path\" argument - strings must start with / or *')\n        }\n\n        const {pattern, keys} = regexparam(path)\n\n        this.path = path\n\n        // Check if the component is wrapped and we have conditions\n        if (typeof component == 'object' && component._sveltesparouter === true) {\n            this.component = component.component\n            this.conditions = component.conditions || []\n            this.userData = component.userData\n            this.props = component.props || {}\n        }\n        else {\n            // Convert the component to a function that returns a Promise, to normalize it\n            this.component = () => Promise.resolve(component)\n            this.conditions = []\n            this.props = {}\n        }\n\n        this._pattern = pattern\n        this._keys = keys\n    }\n\n    /**\n     * Checks if `path` matches the current route.\n     * If there's a match, will return the list of parameters from the URL (if any).\n     * In case of no match, the method will return `null`.\n     *\n     * @param {string} path - Path to test\n     * @returns {null|Object.<string, string>} List of paramters from the URL if there's a match, or `null` otherwise.\n     */\n    match(path) {\n        // If there's a prefix, check if it matches the start of the path.\n        // If not, bail early, else remove it before we run the matching.\n        if (prefix) {\n            if (typeof prefix == 'string') {\n                if (path.startsWith(prefix)) {\n                    path = path.substr(prefix.length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n            else if (prefix instanceof RegExp) {\n                const match = path.match(prefix)\n                if (match && match[0]) {\n                    path = path.substr(match[0].length) || '/'\n                }\n                else {\n                    return null\n                }\n            }\n        }\n\n        // Check if the pattern matches\n        const matches = this._pattern.exec(path)\n        if (matches === null) {\n            return null\n        }\n\n        // If the input was a regular expression, this._keys would be false, so return matches as is\n        if (this._keys === false) {\n            return matches\n        }\n\n        const out = {}\n        let i = 0\n        while (i < this._keys.length) {\n            // In the match parameters, URL-decode all values\n            try {\n                out[this._keys[i]] = decodeURIComponent(matches[i + 1] || '') || null\n            }\n            catch (e) {\n                out[this._keys[i]] = null\n            }\n            i++\n        }\n        return out\n    }\n\n    /**\n     * Dictionary with route details passed to the pre-conditions functions, as well as the `routeLoading`, `routeLoaded` and `conditionsFailed` events\n     * @typedef {Object} RouteDetail\n     * @property {string|RegExp} route - Route matched as defined in the route definition (could be a string or a reguar expression object)\n     * @property {string} location - Location path\n     * @property {string} querystring - Querystring from the hash\n     * @property {object} [userData] - Custom data passed by the user\n     * @property {SvelteComponent} [component] - Svelte component (only in `routeLoaded` events)\n     * @property {string} [name] - Name of the Svelte component (only in `routeLoaded` events)\n     */\n\n    /**\n     * Executes all conditions (if any) to control whether the route can be shown. Conditions are executed in the order they are defined, and if a condition fails, the following ones aren't executed.\n     * \n     * @param {RouteDetail} detail - Route detail\n     * @returns {bool} Returns true if all the conditions succeeded\n     */\n    async checkConditions(detail) {\n        for (let i = 0; i < this.conditions.length; i++) {\n            if (!(await this.conditions[i](detail))) {\n                return false\n            }\n        }\n\n        return true\n    }\n}\n\n// Set up all routes\nconst routesList = []\nif (routes instanceof Map) {\n    // If it's a map, iterate on it right away\n    routes.forEach((route, path) => {\n        routesList.push(new RouteItem(path, route))\n    })\n}\nelse {\n    // We have an object, so iterate on its own properties\n    Object.keys(routes).forEach((path) => {\n        routesList.push(new RouteItem(path, routes[path]))\n    })\n}\n\n// Props for the component to render\nlet component = null\nlet componentParams = null\nlet props = {}\n\n// Event dispatcher from Svelte\nconst dispatch = createEventDispatcher()\n\n// Just like dispatch, but executes on the next iteration of the event loop\nasync function dispatchNextTick(name, detail) {\n    // Execute this code when the current call stack is complete\n    await tick()\n    dispatch(name, detail)\n}\n\n// If this is set, then that means we have popped into this var the state of our last scroll position\nlet previousScrollState = null\n\n// Update history.scrollRestoration depending on restoreScrollState\n$: history.scrollRestoration = restoreScrollState ? 'manual' : 'auto'\n\nif (restoreScrollState) {\n    window.addEventListener('popstate', (event) => {\n        // If this event was from our history.replaceState, event.state will contain\n        // our scroll history. Otherwise, event.state will be null (like on forward\n        // navigation)\n        if (event.state && event.state.scrollY) {\n            previousScrollState = event.state\n        }\n        else {\n            previousScrollState = null\n        }\n    })\n\n    afterUpdate(() => {\n        // If this exists, then this is a back navigation: restore the scroll position\n        if (previousScrollState) {\n            window.scrollTo(previousScrollState.scrollX, previousScrollState.scrollY)\n        }\n        else {\n            // Otherwise this is a forward navigation: scroll to top\n            window.scrollTo(0, 0)\n        }\n    })\n}\n\n// Always have the latest value of loc\nlet lastLoc = null\n\n// Current object of the component loaded\nlet componentObj = null\n\n// Handle hash change events\n// Listen to changes in the $loc store and update the page\n// Do not use the $: syntax because it gets triggered by too many things\nloc.subscribe(async (newLoc) => {\n    lastLoc = newLoc\n\n    // Find a route matching the location\n    let i = 0\n    while (i < routesList.length) {\n        const match = routesList[i].match(newLoc.location)\n        if (!match) {\n            i++\n            continue\n        }\n\n        const detail = {\n            route: routesList[i].path,\n            location: newLoc.location,\n            querystring: newLoc.querystring,\n            userData: routesList[i].userData\n        }\n\n        // Check if the route can be loaded - if all conditions succeed\n        if (!(await routesList[i].checkConditions(detail))) {\n            // Don't display anything\n            component = null\n            componentObj = null\n            // Trigger an event to notify the user, then exit\n            dispatchNextTick('conditionsFailed', detail)\n            return\n        }\n        \n        // Trigger an event to alert that we're loading the route\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoading', Object.assign({}, detail))\n\n        // If there's a component to show while we're loading the route, display it\n        const obj = routesList[i].component\n        // Do not replace the component if we're loading the same one as before, to avoid the route being unmounted and re-mounted\n        if (componentObj != obj) {\n            if (obj.loading) {\n                component = obj.loading\n                componentObj = obj\n                componentParams = obj.loadingParams\n                props = {}\n\n                // Trigger the routeLoaded event for the loading component\n                // Create a copy of detail so we don't modify the object for the dynamic route (and the dynamic route doesn't modify our object too)\n                dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n                    component: component,\n                    name: component.name\n                }))\n            }\n            else {\n                component = null\n                componentObj = null\n            }\n\n            // Invoke the Promise\n            const loaded = await obj()\n\n            // Now that we're here, after the promise resolved, check if we still want this component, as the user might have navigated to another page in the meanwhile\n            if (newLoc != lastLoc) {\n                // Don't update the component, just exit\n                return\n            }\n\n            // If there is a \"default\" property, which is used by async routes, then pick that\n            component = (loaded && loaded.default) || loaded\n            componentObj = obj\n        }\n\n        // Set componentParams only if we have a match, to avoid a warning similar to `<Component> was created with unknown prop 'params'`\n        // Of course, this assumes that developers always add a \"params\" prop when they are expecting parameters\n        if (match && typeof match == 'object' && Object.keys(match).length) {\n            componentParams = match\n        }\n        else {\n            componentParams = null\n        }\n\n        // Set static props, if any\n        props = routesList[i].props\n\n        // Dispatch the routeLoaded event then exit\n        // We need to clone the object on every event invocation so we don't risk the object to be modified in the next tick\n        dispatchNextTick('routeLoaded', Object.assign({}, detail, {\n            component: component,\n            name: component.name\n        }))\n        return\n    }\n\n    // If we're still here, there was no match, so show the empty component\n    component = null\n    componentObj = null\n})\n</script>\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<div class=\"flex-item\">\n    <slot />\n</div>\n\n<style>\n    .flex-item {\n        display: flex;\n        justify-content: space-evenly;\n        width: 100%;\n        margin: 0 auto;\n        padding: 1rem 0;\n        border-bottom: 1px solid black;\n    }\n\n    @media (orientation: landscape) {\n        .flex-item {\n            padding: 3rem 0;\n        }\n    }\n</style>\n","<style>\n    svg {\n        padding: 0 1rem;\n        overflow: visible;\n    }\n    svg:hover path {\n        stroke: red;\n        animation: shake 0.5s infinite;\n    }\n    @keyframes shake {\n        0% {\n            transform: translate(1px, 1px) rotate(0deg);\n        }\n        10% {\n            transform: translate(-1px, -2px) rotate(-1deg);\n        }\n        20% {\n            transform: translate(-3px, 0px) rotate(1deg);\n        }\n        30% {\n            transform: translate(3px, 2px) rotate(0deg);\n        }\n        40% {\n            transform: translate(1px, -1px) rotate(1deg);\n        }\n        50% {\n            transform: translate(-1px, 2px) rotate(-1deg);\n        }\n        60% {\n            transform: translate(-3px, 1px) rotate(0deg);\n        }\n        70% {\n            transform: translate(3px, 1px) rotate(-1deg);\n        }\n        80% {\n            transform: translate(-1px, -1px) rotate(1deg);\n        }\n        90% {\n            transform: translate(1px, 2px) rotate(0deg);\n        }\n        100% {\n            transform: translate(1px, -2px) rotate(-1deg);\n        }\n    }\n</style>\n\n<svg\n    width=\"90%\"\n    height=\"90%\"\n    viewBox=\"0 0 184 107\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M160.544 57.8397C167.03 52.5821 171.986 50.8713 176.346 44.2277C177.728 40.7699 176.677 38.2041 175.776 34.842C174.901 31.5776 173.225 30.3991 170.736 28.1312C168.877 26.436 165.811 25.2582 163.728 23.618C161.576 21.9229 158.571 20.25 155.668 20.2859C152.666 20.3229 149.773 18.9447 146.677 19.2587C145.115 19.4171 143.456 19.7175 141.882 19.6442C138.43 19.4836 135.108 19.1867 131.686 19.2289C124.171 19.3216 116.274 18.5643 108.801 19.58C105.423 20.0391 101.058 21.3045 97.846 22.5154C94.2689 23.864 90.95 25.6634 87.4253 27.0418C85.8445 27.6601 82.77 28.668 81.7298 29.981C80.3986 31.6616 76.193 31.2358 74.3163 32.2886C72.853 33.1096 71.4251 33.6093 69.5802 34.1037C63.5131 35.7293 57.9424 38.3782 51.8237 40.0177C47.5663 41.1584 43.1761 43.6527 39.2625 45.6958C36.4818 47.1475 33.249 49.0208 31.3925 51.2731C29.6316 53.4094 26.3622 56.1293 24.0132 57.8751C20.7428 60.3056 18.2399 63.423 15.2171 66.045C13.6416 67.4115 8.67767 71.2046 9.12691 73.4256C9.74424 76.4777 11.4172 78.5145 12.5045 81.1919C13.6577 84.0315 16.0779 87.1903 19.051 88.6872C20.5857 89.4598 21.9625 90.2084 23.5474 90.9509C25.4055 91.8214 27.7628 90.9233 29.5694 91.6497C32.4035 92.7891 37.0627 92.1461 40.227 92.7121C45.208 93.6031 50.3115 93.8169 55.3596 93.539C59.0102 93.338 62.0421 93.9323 65.718 92.9473L78.8909 89.4177C85.1846 87.7313 91.6081 86.2944 97.6642 83.9378C103.268 81.7569 109.202 81.2958 115.049 79.7291C119.547 78.5239 123.355 76.9601 127.565 75.0909C131.786 73.2168 136.317 71.7819 140.358 69.6074C143.94 67.6803 148.03 65.505 151.846 64.0886C155.325 62.7974 157.806 60.0592 160.544 57.8397Z\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n    <path\n        d=\"M159.897 55.4226C166.382 50.165 171.338 48.4542 175.698 41.8106C177.08 38.3527 176.029 35.787 175.128 32.4249C174.254 29.1605 172.577 27.9819 170.089 25.7141C168.229 24.0189 165.164 22.8411 163.081 21.2009C160.928 19.5058 157.923 17.8329 155.02 17.8687C152.019 17.9058 149.125 16.5275 146.029 16.8416C144.467 16.9999 142.808 17.3004 141.234 17.2271C137.782 17.0665 134.461 16.7696 131.038 16.8118C123.523 16.9045 115.626 16.1472 108.153 17.1629C104.775 17.622 100.41 18.8874 97.1983 20.0983C93.6212 21.4469 90.3023 23.2463 86.7776 24.6247C85.1968 25.243 82.1223 26.2509 81.0821 27.5639C79.7509 29.2444 75.5452 28.8187 73.6686 29.8715C72.2053 30.6925 70.7774 31.1922 68.9325 31.6865C62.8654 33.3122 57.2947 35.9611 51.176 37.6006C46.9186 38.7413 42.5284 41.2356 38.6148 43.2787C35.8341 44.7304 32.6013 46.6037 30.7448 48.856C28.9839 50.9923 25.7145 53.7122 23.3655 55.458C20.0951 57.8884 17.5922 61.0059 14.5694 63.6279C12.9939 64.9944 8.02996 68.7875 8.4792 71.0085C9.09654 74.0606 10.7694 76.0973 11.8568 78.7748C13.01 81.6144 15.4301 84.7732 18.4033 86.2701C19.938 87.0427 21.3148 87.7913 22.8997 88.5338C24.7578 89.4043 27.1151 88.5062 28.9217 89.2325C31.7558 90.372 36.415 89.729 39.5793 90.295C44.5602 91.1859 49.6638 91.3997 54.7119 91.1219C58.3625 90.9209 61.3944 91.5152 65.0703 90.5302L78.2432 87.0005C84.5369 85.3142 90.9604 83.8773 97.0165 81.5207C102.621 79.3398 108.555 78.8786 114.402 77.312C118.899 76.1068 122.708 74.543 126.917 72.6738C131.138 70.7996 135.669 69.3647 139.711 67.1903C143.293 65.2632 147.382 63.0879 151.198 61.6715C154.677 60.3803 157.159 57.6421 159.897 55.4226Z\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n</svg>\n","<style>\n    svg {\n        padding: 0 1rem;\n        overflow: visible;\n    }\n    svg:hover path {\n        stroke: red;\n        animation: shake 0.5s infinite;\n    }\n    @keyframes shake {\n        0% {\n            transform: translate(1px, 1px) rotate(0deg);\n        }\n        10% {\n            transform: translate(-1px, -2px) rotate(-1deg);\n        }\n        20% {\n            transform: translate(-3px, 0px) rotate(1deg);\n        }\n        30% {\n            transform: translate(3px, 2px) rotate(0deg);\n        }\n        40% {\n            transform: translate(1px, -1px) rotate(1deg);\n        }\n        50% {\n            transform: translate(-1px, 2px) rotate(-1deg);\n        }\n        60% {\n            transform: translate(-3px, 1px) rotate(0deg);\n        }\n        70% {\n            transform: translate(3px, 1px) rotate(-1deg);\n        }\n        80% {\n            transform: translate(-1px, -1px) rotate(1deg);\n        }\n        90% {\n            transform: translate(1px, 2px) rotate(0deg);\n        }\n        100% {\n            transform: translate(1px, -2px) rotate(-1deg);\n        }\n    }\n</style>\n\n<svg\n    width=\"80%\"\n    height=\"80%\"\n    viewBox=\"0 0 132 100\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M5.38177 18.9749C8.79061 14.7138 9.90126 14.115 15.6174 14.115C19.148 14.115 19.9345 12.73 22.4592 10.2054C25.0584 7.60616 30.2434 10.2792 33.455 8.49493C38.5341 5.67321 41.4239 0.920044 47.8988 0.920044C52.561 0.920044 56.4267 1.85076 60.1164 4.80251C64.3022 8.15117 68.6736 12.5423 73.6643 14.6037C77.5947 16.2271 80.1095 16.5585 84.3615 16.5585C88.215 16.5585 91.7664 15.5811 95.5473 15.5811C98.099 15.5811 100.652 15.5545 103.204 15.5811C108.063 15.6317 111.064 17.6079 115.475 19.2735C119.308 20.7204 124.588 21.1014 126.526 25.1379C128.055 28.3246 126.982 33.1613 127.774 36.6496C128.462 39.675 128.996 43.0172 128.996 46.125C128.996 49.8255 128.917 53.436 128.508 57.1208C128.062 61.1295 127.153 62.3852 124.598 64.94C121.775 67.7625 120.939 71.8706 118.245 74.7141C115.595 77.5115 112.196 79.5539 109.665 82.4247C108.168 84.1233 107.137 86.1315 105.647 87.8004C104.741 88.8151 104.738 90.0154 103.475 90.8412C102.197 91.6771 100.546 91.665 99.1854 92.3073C97.2717 93.211 95.4687 94.244 93.5925 95.2124C89.0383 97.563 84.6004 97.1944 79.6102 97.1944C74.7346 97.1944 69.3539 97.3907 64.9491 94.968C60.5528 92.5501 55.9587 90.8142 51.8085 87.909C47.4912 84.887 42.4396 85.5628 37.5004 84.8682C32.9825 84.2329 27.7275 81.752 23.8167 79.4925C21.9846 78.4339 19.9641 77.5609 18.441 76.0716C16.5103 74.1838 14.8759 71.4287 12.7937 69.827C10.6916 68.21 8.95353 65.6317 7.79813 63.2567C6.49408 60.5762 6.25842 57.5576 5.73472 54.6773C5.41593 52.924 4.27127 51.5127 3.88851 49.7903C3.12396 46.3498 0.956299 43.6663 0.956299 40.0162C0.956299 36.9555 1.4548 34.4299 1.9337 31.4368C2.54806 27.597 2.87676 22.1061 5.38177 18.9749Z\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n    <path\n        d=\"M7.38177 20.9749C10.7906 16.7138 11.9013 16.115 17.6174 16.115C21.148 16.115 21.9345 14.73 24.4592 12.2054C27.0584 9.60616 32.2434 12.2792 35.455 10.4949C40.5341 7.67321 43.4239 2.92004 49.8988 2.92004C54.561 2.92004 58.4267 3.85076 62.1164 6.80251C66.3022 10.1512 70.6736 14.5423 75.6643 16.6037C79.5947 18.2271 82.1095 18.5585 86.3615 18.5585C90.215 18.5585 93.7664 17.5811 97.5473 17.5811C100.099 17.5811 102.652 17.5545 105.204 17.5811C110.063 17.6317 113.064 19.6079 117.475 21.2735C121.308 22.7204 126.588 23.1014 128.526 27.1379C130.055 30.3246 128.982 35.1613 129.774 38.6496C130.462 41.675 130.996 45.0172 130.996 48.125C130.996 51.8255 130.917 55.436 130.508 59.1208C130.062 63.1295 129.153 64.3852 126.598 66.94C123.775 69.7625 122.939 73.8706 120.245 76.7141C117.595 79.5115 114.196 81.5539 111.665 84.4247C110.168 86.1233 109.137 88.1315 107.647 89.8004C106.741 90.8151 106.738 92.0154 105.475 92.8412C104.197 93.6771 102.546 93.665 101.185 94.3073C99.2717 95.211 97.4687 96.244 95.5925 97.2124C91.0383 99.563 86.6004 99.1944 81.6102 99.1944C76.7346 99.1944 71.3539 99.3907 66.9491 96.968C62.5528 94.5501 57.9587 92.8142 53.8085 89.909C49.4912 86.887 44.4396 87.5628 39.5004 86.8682C34.9825 86.2329 29.7275 83.752 25.8167 81.4925C23.9846 80.4339 21.9641 79.5609 20.441 78.0716C18.5103 76.1838 16.8759 73.4287 14.7937 71.827C12.6916 70.21 10.9535 67.6317 9.79813 65.2567C8.49408 62.5762 8.25842 59.5576 7.73472 56.6773C7.41593 54.924 6.27127 53.5127 5.88851 51.7903C5.12396 48.3498 2.9563 45.6663 2.9563 42.0162C2.9563 38.9555 3.4548 36.4299 3.9337 33.4368C4.54806 29.597 4.87676 24.1061 7.38177 20.9749Z\"\n        stroke=\"black\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n</svg>\n","<style>\n    svg {\n        padding: 0 1rem;\n        overflow: visible;\n    }\n    svg:hover path {\n        stroke: red;\n        animation: shake 0.5s infinite;\n    }\n    @keyframes shake {\n        0% {\n            transform: translate(1px, 1px) rotate(0deg);\n        }\n        10% {\n            transform: translate(-1px, -2px) rotate(-1deg);\n        }\n        20% {\n            transform: translate(-3px, 0px) rotate(1deg);\n        }\n        30% {\n            transform: translate(3px, 2px) rotate(0deg);\n        }\n        40% {\n            transform: translate(1px, -1px) rotate(1deg);\n        }\n        50% {\n            transform: translate(-1px, 2px) rotate(-1deg);\n        }\n        60% {\n            transform: translate(-3px, 1px) rotate(0deg);\n        }\n        70% {\n            transform: translate(3px, 1px) rotate(-1deg);\n        }\n        80% {\n            transform: translate(-1px, -1px) rotate(1deg);\n        }\n        90% {\n            transform: translate(1px, 2px) rotate(0deg);\n        }\n        100% {\n            transform: translate(1px, -2px) rotate(-1deg);\n        }\n    }\n</style>\n\n<svg\n    width=\"80%\"\n    height=\"80%\"\n    viewBox=\"0 0 148 146\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M75.2519 4.84797C64.1068 23.4232 77.9445 31.0656 61.0793 52.2544C61.0793 70.0912 30.8788 74.495 25.2179 71.979C-16.1479 70.2312 9.05854 83.8138 17.393 83.8138C22.3025 83.8138 30.2091 85.3499 34.7798 83.5216C41.382 80.8807 50.7211 78.8833 57.7919 77.312C66.1538 75.4538 61.2372 87.2728 58.4494 90.3887C51.7611 97.8638 49.782 107.543 45.9571 115.958C43.7841 120.738 44.8392 131.76 46.9068 136.413C49.7048 142.708 56.7885 137.195 60.273 134.483L60.4218 134.367C67.8286 128.606 71.3785 116.975 75.2519 108.798C77.9392 103.125 82.119 97.4254 82.119 91.0462C82.119 83.4456 88.7991 86.7393 92.3466 90.6809C96.0182 94.7605 100.418 101.956 103.159 106.753C106.377 112.386 112.987 114.682 117.623 119.318C120.97 122.664 123.718 126.824 127.486 129.838C131.012 132.659 127.441 145.618 132.745 145.618C141.703 145.618 143.923 145.925 143.923 136.413C143.923 127.916 141.996 122.215 138.663 114.716C135.61 107.846 127.404 103.261 123.906 96.9635C121.368 92.3952 115.08 85.7612 110.391 83.1563C105.145 80.2418 97.9648 78.9308 102.136 71.979C107.862 62.4349 120.412 63.2833 130.042 61.5323C138.636 59.9698 146.553 61.1014 146.553 50.9394C146.553 46.7277 147.606 41.1494 146.48 37.2053C146.04 35.6681 139.351 36.4747 137.932 36.4747C127.331 36.4747 115.486 35.2786 105.789 40.1274C99.4769 43.2833 91.8631 46.4552 86.7214 51.5969C84.0795 54.2388 82.119 57.9032 82.119 51.9622C82.119 48.1147 87.5576 7.46985 83.188 5.43069C78.7698 -0.249919 77.5856 0.958423 75.2519 4.84797Z\"\n        stroke=\"black\"\n        stroke-width=\"0.582615\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n    <path\n        d=\"M73.504 4.26539C62.3589 22.8406 76.1966 30.4831 59.3315 51.6718C59.3315 69.5086 29.131 73.9124 23.47 71.3965C-17.8957 69.6486 7.31067 83.2312 15.6451 83.2312C20.5547 83.2312 28.4612 84.7673 33.032 82.939C39.6341 80.2981 48.9732 78.3007 56.044 76.7294C64.4059 74.8712 59.4894 86.6902 56.7015 89.8061C50.0132 97.2813 48.0342 106.96 44.2093 115.375C42.0363 120.156 43.0913 131.178 45.159 135.83C47.957 142.126 55.0407 136.612 58.5251 133.9L58.674 133.785C66.0808 128.024 69.6307 116.393 73.504 108.216C76.1914 102.542 80.3711 96.8428 80.3711 90.4636C80.3711 82.863 87.0513 86.1567 90.5987 90.0983C94.2704 94.1779 98.6699 101.374 101.411 106.17C104.629 111.803 111.239 114.099 115.875 118.736C119.222 122.082 121.97 126.241 125.738 129.255C129.264 132.076 125.693 145.035 130.998 145.035C139.955 145.035 142.175 145.342 142.175 135.83C142.175 127.334 140.248 121.632 136.915 114.133C133.862 107.263 125.657 102.678 122.158 96.381C119.62 91.8126 113.332 85.1786 108.643 82.5737C103.397 79.6592 96.2169 78.3482 100.388 71.3965C106.114 61.8523 118.664 62.7007 128.295 60.9497C136.888 59.3872 144.805 60.5188 144.805 50.3569C144.805 46.1451 145.859 40.5668 144.732 36.6227C144.292 35.0855 137.603 35.8922 136.184 35.8922C125.583 35.8922 113.738 34.696 104.041 39.5449C97.729 42.7007 90.1152 45.8726 84.9735 51.0144C82.3316 53.6562 80.3711 57.3206 80.3711 51.3796C80.3711 47.5321 85.8098 6.88727 81.4402 4.84811C77.0219 -0.8325 75.8378 0.375842 73.504 4.26539Z\"\n        stroke=\"black\"\n        stroke-width=\"0.582615\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n</svg>\n","<style>\n    svg {\n        padding: 0 1rem;\n        overflow: visible;\n    }\n    svg:hover path {\n        stroke: red;\n        animation: shake 0.5s infinite;\n    }\n    @keyframes shake {\n        0% {\n            transform: translate(1px, 1px) rotate(0deg);\n        }\n        10% {\n            transform: translate(-1px, -2px) rotate(-1deg);\n        }\n        20% {\n            transform: translate(-3px, 0px) rotate(1deg);\n        }\n        30% {\n            transform: translate(3px, 2px) rotate(0deg);\n        }\n        40% {\n            transform: translate(1px, -1px) rotate(1deg);\n        }\n        50% {\n            transform: translate(-1px, 2px) rotate(-1deg);\n        }\n        60% {\n            transform: translate(-3px, 1px) rotate(0deg);\n        }\n        70% {\n            transform: translate(3px, 1px) rotate(-1deg);\n        }\n        80% {\n            transform: translate(-1px, -1px) rotate(1deg);\n        }\n        90% {\n            transform: translate(1px, 2px) rotate(0deg);\n        }\n        100% {\n            transform: translate(1px, -2px) rotate(-1deg);\n        }\n    }\n</style>\n\n<svg\n    width=\"90%\"\n    height=\"90%\"\n    viewBox=\"0 0 192 115\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n        d=\"M11.9665 58.8908C8.94155 54.0901 11.1715 47.8065 12.2473 42.7452C12.683 40.6955 12.576 39.1296 11.9811 37.1904C11.4252 35.3784 12.5538 32.9123 11.6834 31.1787C10.1697 28.1637 13.6876 21.9139 14.8862 19.2875C16.0078 16.8297 19.1837 15.6284 21.6248 14.9644C29.2316 12.8954 36.0923 9.0355 43.9725 7.84993C49.2825 7.05103 56.5576 9.83751 61.8165 11.0319C68.4413 12.5365 72.4211 15.2851 77.3956 19.4236C84.1441 25.0379 94.7528 27.2929 103.236 29.096L103.248 29.0987C113.57 31.2926 124.443 30.113 134.599 33.4796C139.195 35.0031 143.415 36.4788 148.214 37.4988C153.377 38.5963 158.587 39.5618 163.719 40.7945C168.654 41.98 173.873 44.0764 178.105 46.7785C181.783 49.1265 181.941 51.802 179.472 55.1717C177.855 57.3786 177.555 60.1069 177 62.7168C176.524 64.9582 177.652 66.4192 177.941 68.5758C178.481 72.5879 178.188 77.2421 179.197 81.1252C181.547 90.1699 173.06 94.2753 165.821 95.645C158.292 97.0697 151.513 101.002 143.923 101.858C138.885 102.426 134.384 102.853 129.341 101.781L114.39 98.6032C109.616 97.5884 105.652 95.1838 101.023 94.0256C96.81 92.9717 92.5837 91.6531 88.2506 90.732C85.3169 90.1085 82.5933 88.9508 79.6622 88.3278C76.4304 87.6408 74.2583 84.3376 70.7141 83.532C64.6025 82.1427 58.4481 80.9248 52.3175 79.6217C43.0304 77.6476 34.2954 74.6607 25.6776 70.776C20.3572 68.3777 15.0597 63.7999 11.9665 58.8908Z\"\n        stroke=\"black\"\n        stroke-width=\"1.19032\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n    <path\n        d=\"M12.9665 61.8908C9.94155 57.0901 12.1715 50.8065 13.2473 45.7452C13.683 43.6955 13.576 42.1296 12.9811 40.1904C12.4252 38.3784 13.5538 35.9123 12.6834 34.1787C11.1697 31.1637 14.6876 24.9139 15.8862 22.2875C17.0078 19.8297 20.1837 18.6284 22.6248 17.9644C30.2316 15.8954 37.0923 12.0355 44.9725 10.8499C50.2825 10.051 57.5576 12.8375 62.8165 14.0319C69.4413 15.5365 73.4211 18.2851 78.3956 22.4236C85.1441 28.0379 95.7528 30.2929 104.236 32.096L104.248 32.0987C114.57 34.2926 125.443 33.113 135.599 36.4796C140.195 38.0031 144.415 39.4788 149.214 40.4988C154.377 41.5963 159.587 42.5618 164.719 43.7945C169.654 44.98 174.873 47.0764 179.105 49.7785C182.783 52.1265 182.941 54.802 180.472 58.1717C178.855 60.3786 178.555 63.1069 178 65.7168C177.524 67.9582 178.652 69.4192 178.941 71.5758C179.481 75.5879 179.188 80.2421 180.197 84.1252C182.547 93.1699 174.06 97.2753 166.821 98.645C159.292 100.07 152.513 104.002 144.923 104.858C139.885 105.426 135.384 105.853 130.341 104.781L115.39 101.603C110.616 100.588 106.652 98.1838 102.023 97.0256C97.81 95.9717 93.5837 94.6531 89.2506 93.732C86.3169 93.1085 83.5933 91.9508 80.6622 91.3278C77.4304 90.6408 75.2583 87.3376 71.7141 86.532C65.6025 85.1427 59.4481 83.9248 53.3175 82.6217C44.0304 80.6476 35.2954 77.6607 26.6776 73.776C21.3572 71.3777 16.0597 66.7999 12.9665 61.8908Z\"\n        stroke=\"black\"\n        stroke-width=\"1.19032\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\" />\n</svg>\n","<script lang=\"ts\">\n    export let href: string;\n    import { link } from \"svelte-spa-router\";\n</script>\n\n<style>\n    a {\n        text-decoration: none;\n        margin: auto 0;\n    }\n</style>\n\n{#if href.startsWith('http')}\n    <a {href}><slot /></a>\n{:else}\n    <a {href} use:link><slot /></a>\n{/if}\n","<script lang=\"ts\">\n    export let tittel: string;\n    export let beskrivelse: string | undefined;\n</script>\n\n<style>\n    h3,\n    p {\n        max-width: 30ch;\n        padding: 0 1rem;\n    }\n    div {\n        margin: auto 0;\n    }\n</style>\n\n<div>\n    <h3>{tittel}</h3>\n\n    {#if beskrivelse}\n        <p>{beskrivelse}</p>\n    {/if}\n</div>\n","<svg\n    width=\"90%\"\n    height=\"90%\"\n    viewBox=\"0 0 178 126\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n>\n    <path\n        d=\"M0.944092 122.214C1.20773 106.133 9.7084 88.7785 27.2663 88.1932C38.8856 87.8059 50.2646 90.6692 59.7389 82.7739C68.195 75.7272 74.0979 71.1182 85.674 71.1182C95.2604 71.1182 106.676 72.9815 115.48 68.8386C124.688 64.5055 128.632 58.5004 134.103 50.2153C138.457 43.6221 138.813 35.7703 142.791 29.1403C146.726 22.5822 152.385 20.2284 159.823 18.6458C167.619 16.9872 171.823 8.06551 175.135 1.44177\"\n        stroke=\"black\"\n        stroke-width=\"0.7\"\n        stroke-linecap=\"round\"\n    />\n    <path\n        d=\"M2.94409 125.214C3.20773 109.133 11.7084 91.7785 29.2663 91.1932C40.8856 90.8059 52.2646 93.6692 61.7389 85.7739C70.195 78.7272 76.0979 74.1182 87.674 74.1182C97.2604 74.1182 108.676 75.9815 117.48 71.8386C126.688 67.5055 130.632 61.5004 136.103 53.2153C140.457 46.6221 140.813 38.7703 144.791 32.1403C148.726 25.5822 154.385 23.2284 161.823 21.6458C169.619 19.9872 173.823 11.0655 177.135 4.44177\"\n        stroke=\"black\"\n        stroke-width=\"0.7\"\n        stroke-linecap=\"round\"\n    />\n</svg>\n\n<style>\n    svg {\n        padding: 0 1rem;\n        overflow: visible;\n    }\n    svg:hover path {\n        stroke: red;\n        animation: shake 0.5s infinite;\n    }\n    @keyframes shake {\n        0% {\n            transform: translate(1px, 1px) rotate(0deg);\n        }\n        10% {\n            transform: translate(-1px, -2px) rotate(-1deg);\n        }\n        20% {\n            transform: translate(-3px, 0px) rotate(1deg);\n        }\n        30% {\n            transform: translate(3px, 2px) rotate(0deg);\n        }\n        40% {\n            transform: translate(1px, -1px) rotate(1deg);\n        }\n        50% {\n            transform: translate(-1px, 2px) rotate(-1deg);\n        }\n        60% {\n            transform: translate(-3px, 1px) rotate(0deg);\n        }\n        70% {\n            transform: translate(3px, 1px) rotate(-1deg);\n        }\n        80% {\n            transform: translate(-1px, -1px) rotate(1deg);\n        }\n        90% {\n            transform: translate(1px, 2px) rotate(0deg);\n        }\n        100% {\n            transform: translate(1px, -2px) rotate(-1deg);\n        }\n    }\n</style>\n","<style>\n  svg {\n    padding: 0 1rem;\n    overflow: visible;\n  }\n  svg:hover path {\n    stroke: red;\n    animation: shake 0.5s infinite;\n  }\n  @keyframes shake {\n    0% {\n      transform: translate(1px, 1px) rotate(0deg);\n    }\n    10% {\n      transform: translate(-1px, -2px) rotate(-1deg);\n    }\n    20% {\n      transform: translate(-3px, 0px) rotate(1deg);\n    }\n    30% {\n      transform: translate(3px, 2px) rotate(0deg);\n    }\n    40% {\n      transform: translate(1px, -1px) rotate(1deg);\n    }\n    50% {\n      transform: translate(-1px, 2px) rotate(-1deg);\n    }\n    60% {\n      transform: translate(-3px, 1px) rotate(0deg);\n    }\n    70% {\n      transform: translate(3px, 1px) rotate(-1deg);\n    }\n    80% {\n      transform: translate(-1px, -1px) rotate(1deg);\n    }\n    90% {\n      transform: translate(1px, 2px) rotate(0deg);\n    }\n    100% {\n      transform: translate(1px, -2px) rotate(-1deg);\n    }\n  }\n</style>\n\n\n<svg\n  width=\"80%\"\n  height=\"80%\"\n  viewBox=\"0 0 123 107\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n>\n  <path\n    d=\"M28.3755 24.9788C27.0514 18.6529 24.4397 9.95101 19.6603 5.17163C16.2839 1.79527 16.8062 2.00248 21.2449 2.00248C23.7877 2.00248 25.1962 2.43251 26.967 4.20328C28.453 5.68933 27.6198 8.28663 29.96 9.7493C32.0305 11.0434 33.9265 14.3319 35.6821 16.0876C38.1366 18.5421 41.9728 17.6694 45.0135 17.8482C46.75 17.9504 48.2411 22.727 47.2143 24.0105C46.6423 24.7256 45.7617 25.2321 45.1896 25.9472C44.4128 26.9182 45.2791 28.9377 44.6174 30.1287C43.4003 32.3195 43.2877 37.6555 46.202 37.6555C48.9303 37.6555 50.5036 36.0709 53.3326 36.0709C55.7944 36.0709 57.0342 38.3307 57.6461 40.4725C58.6073 43.8365 56.624 44.5171 55.3133 46.8108C53.1752 50.5524 55.9095 53.3052 58.5265 55.9221C62.9336 60.3293 65.5153 62.496 69.6185 57.1105C76.2317 48.4307 88.7716 48.2907 98.537 48.7915C107.438 49.248 113.368 55.7294 117.112 63.0087C119.257 67.1796 120.547 70.9028 120.281 75.6853C120.03 80.1986 113.035 79.4123 110.773 77.2699C108.261 74.8892 107.604 72.0365 107.604 68.7308C107.604 65.886 110.116 64.5131 109.981 62.2164C109.882 60.5319 104.445 56.7626 102.851 56.0542C100.267 54.9059 97.1723 56.4063 94.9277 56.6704C93.8317 56.7993 90.3029 60.3281 90.174 61.4241C89.982 63.0563 82.567 61.4241 81.0627 61.4241C79.8781 61.4241 78.2852 61.1424 77.1452 61.4681C76.441 61.6693 76.1314 64.2867 75.4726 64.9454C74.0668 66.3512 70.9604 69.5735 69.1343 70.0953C66.6204 70.8135 62.697 71.889 60.5072 69.6991C59.181 68.373 57.2373 64.0211 54.9171 65.8257C53.5292 66.9052 52.7982 72.2899 54.1689 73.6606C56.2373 75.729 60.067 73.0027 60.067 77.666C60.067 79.3131 63.8221 82.1419 65.1729 80.7912C67.2513 78.7128 68.3792 78.4329 71.1591 79.8228C76.0822 82.2844 74.8351 89.1154 79.8742 91.355C82.3853 92.4711 84.0142 91.7119 85.5963 94.7002C86.6943 96.7741 87.84 99.5076 89.2056 101.215C90.3423 102.635 86.4645 105 85.4203 105C82.9074 105 82.7164 102.648 81.2827 101.215C80.0934 100.025 78.2896 97.9987 78.2896 96.2848C78.2896 93.1849 73.3638 95.7806 71.5992 93.5118C70.0525 91.5232 69.375 88.3619 66.8015 88.3619C63.5766 88.3619 61.515 88.3877 58.8786 86.3372C55.275 83.5344 50.5229 82.5978 48.1827 78.5023C46.8684 76.2023 44.9242 75.0851 44.2653 72.12C43.6541 69.3699 43.429 67.0537 43.429 64.1531C43.429 62.8698 44.2949 53.1261 42.9888 52.753C39.5838 51.7801 38.8132 54.9799 38.6752 57.4627C38.4327 61.8284 28.7801 62.2689 26.1747 59.6635C24.1697 57.6585 29.0863 56.4705 29.1678 55.0858C29.3453 52.0682 29.5031 49.9968 31.5446 47.9552C33.4018 46.098 34.2725 42.9944 30.7523 43.2015C28.7222 43.3209 27.2235 45.5784 25.2063 45.5784C22.1395 45.5784 18.4088 47.5025 15.5228 48.5714C12.0931 49.8417 8.63485 49.5398 5.00295 49.5398C-1.76364 49.5398 0.923532 42.4092 6.58753 42.4092C11.1452 42.4092 17.2152 45.0435 20.8047 40.4285C22.2443 38.5775 24.3808 38.3782 26.3947 37.2593C27.6746 36.5483 28.9894 37.1971 30.3122 36.8192C31.5337 36.4702 31.1489 34.3276 31.9408 33.694C32.732 33.061 32.3369 31.0615 32.3369 30.1287C32.3369 28.1895 30.8166 29.6149 29.96 28.5441C28.416 26.6141 28.3755 23.5294 28.3755 21.0174\"\n    stroke=\"black\"\n    stroke-width=\"0.582615\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n  <path\n    d=\"M29.3755 23.9788C28.0514 17.6529 25.4397 8.95101 20.6603 4.17163C17.2839 0.795265 17.8062 1.00248 22.2449 1.00248C24.7877 1.00248 26.1962 1.43251 27.967 3.20328C29.453 4.68933 28.6198 7.28663 30.96 8.7493C33.0305 10.0434 34.9265 13.3319 36.6821 15.0876C39.1366 17.5421 42.9728 16.6694 46.0135 16.8482C47.75 16.9504 49.2411 21.727 48.2143 23.0105C47.6423 23.7256 46.7617 24.2321 46.1896 24.9472C45.4128 25.9182 46.2791 27.9377 45.6174 29.1287C44.4003 31.3195 44.2877 36.6555 47.202 36.6555C49.9303 36.6555 51.5036 35.0709 54.3326 35.0709C56.7944 35.0709 58.0342 37.3307 58.6461 39.4725C59.6073 42.8365 57.624 43.5171 56.3133 45.8108C54.1752 49.5524 56.9095 52.3052 59.5265 54.9221C63.9336 59.3293 66.5153 61.496 70.6185 56.1105C77.2317 47.4307 89.7716 47.2907 99.537 47.7915C108.438 48.248 114.368 54.7294 118.112 62.0087C120.257 66.1796 121.547 69.9028 121.281 74.6853C121.03 79.1986 114.035 78.4123 111.773 76.2699C109.261 73.8892 108.604 71.0365 108.604 67.7308C108.604 64.886 111.116 63.5131 110.981 61.2164C110.882 59.5319 105.445 55.7626 103.851 55.0542C101.267 53.9059 98.1723 55.4063 95.9277 55.6704C94.8317 55.7993 91.3029 59.3281 91.174 60.4241C90.982 62.0563 83.567 60.4241 82.0627 60.4241C80.8781 60.4241 79.2852 60.1424 78.1452 60.4681C77.441 60.6693 77.1314 63.2867 76.4726 63.9454C75.0668 65.3512 71.9604 68.5735 70.1343 69.0953C67.6204 69.8135 63.697 70.889 61.5072 68.6991C60.181 67.373 58.2373 63.0211 55.9171 64.8257C54.5292 65.9052 53.7982 71.2899 55.1689 72.6606C57.2373 74.729 61.067 72.0027 61.067 76.666C61.067 78.3131 64.8221 81.1419 66.1729 79.7912C68.2513 77.7128 69.3792 77.4329 72.1591 78.8228C77.0822 81.2844 75.8351 88.1154 80.8742 90.355C83.3853 91.4711 85.0142 90.7119 86.5963 93.7002C87.6943 95.7741 88.84 98.5076 90.2056 100.215C91.3423 101.635 87.4645 104 86.4203 104C83.9074 104 83.7164 101.648 82.2827 100.215C81.0934 99.0252 79.2896 96.9987 79.2896 95.2848C79.2896 92.1849 74.3638 94.7806 72.5992 92.5118C71.0525 90.5232 70.375 87.3619 67.8015 87.3619C64.5766 87.3619 62.515 87.3877 59.8786 85.3372C56.275 82.5344 51.5229 81.5978 49.1827 77.5023C47.8684 75.2023 45.9242 74.0851 45.2653 71.12C44.6541 68.3699 44.429 66.0537 44.429 63.1531C44.429 61.8698 45.2949 52.1261 43.9888 51.753C40.5838 50.7801 39.8132 53.9799 39.6752 56.4627C39.4327 60.8284 29.7801 61.2689 27.1747 58.6635C25.1697 56.6585 30.0863 55.4705 30.1678 54.0858C30.3453 51.0682 30.5031 48.9968 32.5446 46.9552C34.4018 45.098 35.2725 41.9944 31.7523 42.2015C29.7222 42.3209 28.2235 44.5784 26.2063 44.5784C23.1395 44.5784 19.4088 46.5025 16.5228 47.5714C13.0931 48.8417 9.63485 48.5398 6.00295 48.5398C-0.763641 48.5398 1.92353 41.4092 7.58753 41.4092C12.1452 41.4092 18.2152 44.0435 21.8047 39.4285C23.2443 37.5775 25.3808 37.3782 27.3947 36.2593C28.6746 35.5483 29.9894 36.1971 31.3122 35.8192C32.5337 35.4702 32.1489 33.3276 32.9408 32.694C33.732 32.061 33.3369 30.0615 33.3369 29.1287C33.3369 27.1895 31.8166 28.6149 30.96 27.5441C29.416 25.6141 29.3755 22.5294 29.3755 20.0174\"\n    stroke=\"black\"\n    stroke-width=\"0.582615\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n  />\n</svg>\n","<script lang=\"ts\">\n    import Row from \"./Row.svelte\";\n    import Portal from \"./Portal.svelte\";\n    import Peers from \"./Peers.svelte\";\n    import Star from \"./Star.svelte\";\n    import Blank from \"./Blank.svelte\";\n    import Link from \"./Link.svelte\";\n    import Beskrivelse from \"./Beskrivelse.svelte\";\n    import Wave from \"./Wave.svelte\";\n    import Swonk from \"./Swonk.svelte\";\n</script>\n\n<main>\n    <Row>\n        <p>\n            A collection of some of my computer fantasies from the last years\n        </p>\n    </Row>\n    <Row>\n        <Link href=\"https://github.com/ulrikah/tape\">\n            <Swonk />\n        </Link>\n        <Link href=\"https://github.com/ulrikah/tape\">\n            <Beskrivelse\n                tittel={\"Tape\"}\n                beskrivelse={\"Tools, scripts and scores for musicking in TidalCycles and sox\"}\n            />\n        </Link>\n    </Row>\n    <Row>\n        <Link href=\"/posts/peers\">\n            <Beskrivelse\n                tittel={\"Peers\"}\n                beskrivelse={\"Platform for peer-to-peer voice and video communication\"}\n            />\n        </Link>\n        <Link href=\"/posts/peers\">\n            <Peers />\n        </Link>\n    </Row>\n    <Row>\n        <Link href=\"https://github.com/ulrikah/rave\">\n            <Star />\n        </Link>\n        <Link href=\"https://github.com/ulrikah/rave\">\n            <Beskrivelse\n                tittel={\"Rave\"}\n                beskrivelse={\"Adaptive audio processing with reinforcement learning\"}\n            />\n        </Link>\n    </Row>\n    <Row>\n        <Link\n            href=\"https://blogg.blank.no/interaktive-musikkopplevelser-i-vr-36ceb2f9b9b7\"\n        >\n            <Beskrivelse\n                tittel={\"Blank\"}\n                beskrivelse={\"Exploration of musical interactions in virtual reality. This project was developed as part of a scholarship that I received from Blank\"}\n            />\n        </Link>\n        <Link\n            href=\"https://blogg.blank.no/interaktive-musikkopplevelser-i-vr-36ceb2f9b9b7\"\n        >\n            <Blank />\n        </Link>\n    </Row>\n    <Row>\n        <Link href=\"https://ulrikah.no/morph\">\n            <Portal />\n        </Link>\n        <Link href=\"https://ulrikah.no/morph\">\n            <Beskrivelse\n                tittel={\"Morph\"}\n                beskrivelse={\"Experiments with morphogenesis\"}\n            />\n        </Link>\n    </Row>\n    <Row>\n        <Link href=\"https://ulrikah.no/waveform\">\n            <Beskrivelse\n                tittel={\"Bølger\"}\n                beskrivelse={\"Drawable, audible waveforms in the browser\"}\n            />\n        </Link>\n        <Link href=\"https://ulrikah.no/waveform\">\n            <Wave />\n        </Link>\n    </Row>\n</main>\n\n<style>\n    main {\n        display: flex;\n        flex-direction: column;\n        border-top: 1px solid black;\n        border-right: 1px solid black;\n        width: 90%;\n    }\n\n    p {\n        margin: 0 auto;\n        padding: 1rem;\n    }\n</style>\n","<style>\n    h3 {\n        margin: 0 auto;\n        writing-mode: vertical-rl;\n        position: fixed;\n        top: 1rem;\n    }\n</style>\n\n<div>\n    <h3>Ulrik Antoniussen Halmøy</h3>\n</div>\n","<script lang=\"ts\">\n    import Prosjekter from \"./Prosjekter.svelte\";\n    import Hode from \"./Hode.svelte\";\n</script>\n\n<style>\n    div {\n        display: flex;\n    }\n</style>\n\n<div>\n    <Prosjekter />\n    <Hode />\n</div>\n","<script lang=\"ts\">\n    import Link from \"../Link.svelte\";\n</script>\n\n<main>\n    <h1>Peers</h1>\n\n    <code> peers </code> is an application for peer-to-peer multi-user video and\n    audio streaming over WebRTC. It was developed fall 2020 to learn about\n    WebRTC and to investigate the latency limitations of \"naïve\" multi-user P2P\n    communication when scaling up the number of participants.\n\n    <p>\n        The platform is <a href=\"https://handshakers.herokuapp.com/\"\n            >running on Heroku</a\n        >. Currently, there is only one room to join. If you want to test it you\n        can do so by opening a connection to yourself on two different devices,\n        or invite a friend to join. The platform doesn't require any\n        authentication, so the link above is, in theory, the only thing you need\n        to connect.\n    </p>\n\n    <p>\n        The source code is available at <a\n            href=\"https://github.com/ulrikah/peers\">Github</a\n        >\n    </p>\n    <br />\n\n    <figure>\n        <img src=\"/peers.png\" alt=\"Demonstration of four connected peers\" />\n        <figcaption>User testing of the application</figcaption>\n    </figure>\n\n    <br />\n    <br />\n</main>\n\n<style>\n    main {\n        width: 70%;\n        margin: auto;\n        line-height: 1.3;\n    }\n\n    code {\n        font-weight: bold;\n    }\n\n    img {\n        margin: 0;\n        width: 100%;\n        border: 2px solid black;\n    }\n\n    figcaption {\n        font-size: 0.8rem;\n    }\n</style>\n","<script lang=\"ts\">\n    import Router, { push } from \"svelte-spa-router\";\n    import Peers from \"./Posts/Peers.svelte\";\n\n    const prefix = \"/posts\";\n    const postsRoutes = {\n        \"/peers\": Peers,\n    };\n</script>\n\n<main>\n    <div>\n        <a href=\"/\">../</a>\n    </div>\n    <Router routes={postsRoutes} {prefix} />\n</main>\n\n<style>\n    div {\n        width: 70%;\n        margin: 5% auto 10% auto;\n        text-align: right;\n    }\n    div > a {\n        font-size: 1.5rem;\n        font-family: monospace;\n    }\n</style>\n","<main>\n    <p>This doesn't seem to be a valid page</p>\n</main>\n","<script lang=\"ts\">\n    import Router from \"svelte-spa-router\";\n    import Home from \"./Home.svelte\";\n    import Posts from \"./Posts.svelte\";\n    import NotFound from \"./NotFound.svelte\";\n\n    const routes = {\n        \"/\": Home,\n        \"/posts\": Posts,\n        \"/posts/*\": Posts,\n        \"*\": NotFound,\n    };\n</script>\n\n<body>\n    <Router {routes} />\n</body>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","construct_svelte_component","component","props","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","cancelable","callbacks","$$","event","bubbles","e","createEvent","initCustomEvent","custom_event","call","defaultPrevented","bubble","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","seen_callbacks","Set","flushidx","saved_component","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","get_spread_update","levels","updates","to_null_out","accounted_for","n","key","get_spread_object","spread_props","create_component","mount_component","customElement","m","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","detaching","filtered","targets","indexOf","flush_render_callbacks","init","options","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","splice","$set","$$props","obj","$$set","keys","subscriber_queue","readable","start","subscribe","writable","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","started","values","pending","cleanup","sync","result","unsubscribers","store","unsub","unsubscribe","getLocation","hashPosition","window","location","href","substr","qsPosition","querystring","loc","addEventListener","removeEventListener","$loc","link","hrefVar","tagName","toLowerCase","updateLink","updated","charAt","scrollstateHistoryHandler","preventDefault","currentTarget","history","replaceState","scrollX","scrollY","hash","routes","prefix","restoreScrollState","RouteItem","constructor","path","_sveltesparouter","RegExp","pattern","str","loose","tmp","ext","arr","split","shift","substring","regexparam","conditions","userData","_pattern","_keys","match","startsWith","matches","exec","out","decodeURIComponent","checkConditions","routesList","route","componentParams","dispatch","dispatchNextTick","previousScrollState","state","scrollTo","lastLoc","componentObj","newLoc","loading","loadingParams","loaded","default","scrollRestoration","action_result","destroy","tittel","beskrivelse","Peers","Home","Posts","NotFound","body"],"mappings":"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"}